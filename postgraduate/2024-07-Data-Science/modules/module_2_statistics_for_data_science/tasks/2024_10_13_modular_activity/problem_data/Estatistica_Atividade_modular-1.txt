#Copie este código, cole na sua IDE e execute para ver os resultados
########## Atividade Modular #############################
########## Código de Apoio #############################

import pandas as pd
import matplotlib.pyplot as plt

dados = pd.DataFrame({
  'Consumo': [2595, 8470, 4007, 6734, 33628, 3903, 
              13444, 12560, 31176, 5435, 26736, 3728, 8684, 8356, 36936, 3744, 
              30420, 5958, 1019, 11688, 4442, 2640, 23888, 25844, 7430, 10276, 
              3381, 3512, 4957],
  'Estado_Civil': ["Divorciado", "Casado", "Divorciado", 
                   "Casado", "Solteiro", "Divorciado", "Solteiro", "Solteiro", "Solteiro", 
                   "Casado", "Solteiro", "Divorciado", "Solteiro", "Solteiro", "Solteiro", 
                   "Divorciado", "Solteiro", "Divorciado", "Divorciado", "Solteiro", 
                   "Casado", "Solteiro", "Solteiro", "Solteiro", "Casado", "Solteiro", 
                   "Casado", "Casado", "Casado"], 
  'Genero': ["Feminino", "Feminino", 
             "Masculino", "Feminino", "Feminino", "Feminino", "Feminino", 
             "Feminino", "Feminino", "Masculino", "Masculino", "Masculino", 
             "Feminino", "Feminino", "Masculino", "Masculino", "Feminino", 
             "Masculino", "Feminino", "Feminino", "Masculino", "Masculino", 
             "Masculino", "Masculino", "Masculino", "Feminino", "Feminino", 
             "Masculino", "Feminino"], 
  'Idade': [20.2585750236176, 32.1118436595569, 
            31.7467633607352, 37.8198500301827, 71.2083039792698, 29.7176362875943, 
            44.8093915220787, 35.8376118862763, 58.8385574663313, 39.9177951271474, 
            58.0550560477448, 21.778210059274, 31.7467633607352, 37.8198500301827, 
            71.2083039792698, 18.2385329827666, 61.5387187691615, 35.8376118862763, 
            20.2585750236176, 39.9177951271474, 37.9148802474609, 23.3568492662162, 
            54.9958059606044, 61.2973920327649, 34.58738731516, 29.7176362875943, 
            19.2584996796213, 20.2585750236176, 37.8080561311484], 
  'Renda_Mensal': [1985.88181437971,3769.2479179441, 2291.88059431382, 2390.40280655742, 8534.7173298783, 
                   2495.88975635737, 5714.55454591117, 5832.6343267674, 6882.89867212748, 
                   2099.31900110052, 6342.50934129081, 1941.14793399086, 3575.98064224822, 
                   3589.23716442208, 8534.7173298783, 2740.46957610393, 5714.55454591117, 
                   2390.40280655742, 1635.64603350165, 4364.56455252666, 1905.53820715893, 
                   2338.3086884437, 5832.6343267674, 6882.89867212748, 3842.53578942318, 
                   4919.14670791015, 2063.01440787432, 2380.55793401061, 1985.88181437971],  'Possui_Imovel_Proprio': ["Sim", "Sim", "Nao", "Sim", "Nao", 
                            "Nao", "Nao", "Sim", "Sim", "Nao", "Nao", "Nao", "Nao", "Nao", 
                            "Nao", "Sim", "Nao", "Sim", "Nao", "Nao", "Nao", "Sim", "Sim", 
                            "Nao", "Nao", "Nao", "Nao", "Nao", "Nao"]
})

print(dados.head())


## Histograma do consumo
plt.hist(dados['Consumo'], bins=30, edgecolor='black')
plt.title('Histograma do Consumo')
plt.xlabel('Consumo')
plt.ylabel('Frequência')
plt.show()

# Boxplot do consumo
plt.boxplot(dados['Consumo'])
plt.title('Boxplot do Consumo')
plt.ylabel('Consumo')
plt.show()


# Estatí­sticas descritivas do consumo
estatisticas_descritivas = dados['Consumo'].describe()
print(estatisticas_descritivas)


import seaborn as sns
from scipy.stats import chi2_contingency

# Gera tabela de contingência entre Estado Civil e Possui Imóvel Próprio
tabela_contingencia = pd.crosstab(dados['Estado_Civil'], dados['Possui_Imovel_Proprio'])
print(tabela_contingencia)

# Plot da tabela de contingência
sns.heatmap(tabela_contingencia, annot=True, fmt="d", cmap="YlGnBu")
plt.title('Tabela de Contingência entre Estado Civil e Possui Imóvel Próprio')
plt.xlabel('Possui Imóvel Próprio')
plt.ylabel('Estado Civil')
plt.show()

# Realiza teste qui-quadrado
chi2, p, dof, expected = chi2_contingency(tabela_contingencia)
print(f"Chi2: {chi2}, p-valor: {p}, Graus de Liberdade: {dof}")


#Explore a relação entre as variáveis Consumo e Possui_Imovel_Próprio, responda:

from scipy.stats import ttest_ind

# Boxplot de Consumo por Possui Imóvel Próprio
sns.boxplot(x='Possui_Imovel_Proprio', y='Consumo', data=dados)
plt.title('Boxplot de Consumo por Possui Imóvel Próprio')
plt.xlabel('Possui Imóvel Próprio')
plt.ylabel('Consumo')
plt.show()

# Teste t de Student
grupo1 = dados[dados['Possui_Imovel_Proprio'] == 'Sim']['Consumo']
grupo2 = dados[dados['Possui_Imovel_Proprio'] == 'Nao']['Consumo']

t_stat, p_val = ttest_ind(grupo1, grupo2, equal_var=False, alternative='two-sided')
print(f"Estatí­stica t: {t_stat}, p-valor: {p_val}")


#Explore a relação entre as variáveis Consumo e Idade, e responda:

from scipy.stats import pearsonr

    
# Gráfico de dispersão entre Consumo e Idade
plt.scatter(dados['Idade'], dados['Consumo'], c='blue', marker='o')
plt.title('Relaçã­o entre Consumo e Idade')
plt.xlabel('Idade')
plt.ylabel('Consumo')
plt.show()

# Coeficiente de correlação
correlacao, _ = pearsonr(dados['Consumo'], dados['Idade'])
print(f"Coeficiente de correlação: {correlacao}")

# Ajuste da regressã­o linear do Consumo em função da Idade
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

modelo = LinearRegression()

X =dados[['Idade']].values
Y =dados['Consumo'].values

modelo.fit(X, Y)

# Fazer previsões
Y_pred = modelo.predict(X)

mse = mean_squared_error(Y, Y_pred)
r2 = r2_score(Y, Y_pred)
print(f'Mean Squared Error: {mse}')
print(f'R-squared: {r2}')



#Filtrar dados de renda mensal e possuir imóvel
print(dados[(dados['Renda_Mensal']<5000) & (dados['Possui_Imovel_Proprio'] == 'Sim')])



# Ajuste da regressão linear do Consumo em função da Idade e Renda Mensal
modelo = LinearRegression()

X =dados[['Idade', 'Renda_Mensal']].values
Y =dados['Consumo'].values

modelo.fit(X, Y)

# Fazer previsões
Y_pred = modelo.predict(X)


mse = mean_squared_error(Y, Y_pred)
r2 = r2_score(Y, Y_pred)
print(f'Mean Squared Error: {mse}')
print(f'R-squared: {r2}')

print(f'Coeficientes:  {modelo.coef_}')
print(f'Intercepto:  {modelo.intercept_}')


#Consumo=348*Idade+2,62*RendaMensal- 11910
print( 348*55 + 2.62*6000- 11907)
